using System;
using System.Runtime.CompilerServices;

namespace System.Globalization
{
	// Token: 0x020001E7 RID: 487
	[NullableContext(1)]
	[Nullable(0)]
	public class ChineseLunisolarCalendar : EastAsianLunisolarCalendar
	{
		// Token: 0x1700068F RID: 1679
		// (get) Token: 0x06001E61 RID: 7777 RVA: 0x0011FEEF File Offset: 0x0011F0EF
		public override DateTime MinSupportedDateTime
		{
			get
			{
				return ChineseLunisolarCalendar.s_minDate;
			}
		}

		// Token: 0x17000690 RID: 1680
		// (get) Token: 0x06001E62 RID: 7778 RVA: 0x0011FEF6 File Offset: 0x0011F0F6
		public override DateTime MaxSupportedDateTime
		{
			get
			{
				return ChineseLunisolarCalendar.s_maxDate;
			}
		}

		// Token: 0x17000691 RID: 1681
		// (get) Token: 0x06001E63 RID: 7779 RVA: 0x0011FEFD File Offset: 0x0011F0FD
		protected override int DaysInYearBeforeMinSupportedYear
		{
			get
			{
				return 384;
			}
		}

		// Token: 0x17000692 RID: 1682
		// (get) Token: 0x06001E64 RID: 7780 RVA: 0x0011FF04 File Offset: 0x0011F104
		internal override int MinCalendarYear
		{
			get
			{
				return 1901;
			}
		}

		// Token: 0x17000693 RID: 1683
		// (get) Token: 0x06001E65 RID: 7781 RVA: 0x0011FF0B File Offset: 0x0011F10B
		internal override int MaxCalendarYear
		{
			get
			{
				return 2100;
			}
		}

		// Token: 0x17000694 RID: 1684
		// (get) Token: 0x06001E66 RID: 7782 RVA: 0x0011FEEF File Offset: 0x0011F0EF
		internal override DateTime MinDate
		{
			get
			{
				return ChineseLunisolarCalendar.s_minDate;
			}
		}

		// Token: 0x17000695 RID: 1685
		// (get) Token: 0x06001E67 RID: 7783 RVA: 0x0011FEF6 File Offset: 0x0011F0F6
		internal override DateTime MaxDate
		{
			get
			{
				return ChineseLunisolarCalendar.s_maxDate;
			}
		}

		// Token: 0x17000696 RID: 1686
		// (get) Token: 0x06001E68 RID: 7784 RVA: 0x000C26FD File Offset: 0x000C18FD
		[Nullable(new byte[]
		{
			2,
			1
		})]
		internal override EraInfo[] CalEraInfo
		{
			get
			{
				return null;
			}
		}

		// Token: 0x06001E69 RID: 7785 RVA: 0x0011FF14 File Offset: 0x0011F114
		internal override int GetYearInfo(int lunarYear, int index)
		{
			if (lunarYear < 1901 || lunarYear > 2100)
			{
				throw new ArgumentOutOfRangeException("year", lunarYear, SR.Format(SR.ArgumentOutOfRange_Range, 1901, 2100));
			}
			return ChineseLunisolarCalendar.s_yinfo[lunarYear - 1901, index];
		}

		// Token: 0x06001E6A RID: 7786 RVA: 0x0011FF72 File Offset: 0x0011F172
		internal override int GetYear(int year, DateTime time)
		{
			return year;
		}

		// Token: 0x06001E6B RID: 7787 RVA: 0x0011FF78 File Offset: 0x0011F178
		internal override int GetGregorianYear(int year, int era)
		{
			if (era != 0 && era != 1)
			{
				throw new ArgumentOutOfRangeException("era", era, SR.ArgumentOutOfRange_InvalidEraValue);
			}
			if (year < 1901 || year > 2100)
			{
				throw new ArgumentOutOfRangeException("year", year, SR.Format(SR.ArgumentOutOfRange_Range, 1901, 2100));
			}
			return year;
		}

		// Token: 0x06001E6D RID: 7789 RVA: 0x0011FFEA File Offset: 0x0011F1EA
		public override int GetEra(DateTime time)
		{
			base.CheckTicksRange(time.Ticks);
			return 1;
		}

		// Token: 0x17000697 RID: 1687
		// (get) Token: 0x06001E6E RID: 7790 RVA: 0x000B063A File Offset: 0x000AF83A
		internal override CalendarId ID
		{
			get
			{
				return CalendarId.CHINESELUNISOLAR;
			}
		}

		// Token: 0x17000698 RID: 1688
		// (get) Token: 0x06001E6F RID: 7791 RVA: 0x000AC09E File Offset: 0x000AB29E
		internal override CalendarId BaseCalendarID
		{
			get
			{
				return CalendarId.GREGORIAN;
			}
		}

		// Token: 0x17000699 RID: 1689
		// (get) Token: 0x06001E70 RID: 7792 RVA: 0x0011FFFA File Offset: 0x0011F1FA
		public override int[] Eras
		{
			get
			{
				return new int[]
				{
					1
				};
			}
		}

		// Token: 0x040006CD RID: 1741
		public const int ChineseEra = 1;

		// Token: 0x040006CE RID: 1742
		private static readonly DateTime s_minDate = new DateTime(1901, 2, 19);

		// Token: 0x040006CF RID: 1743
		private static readonly DateTime s_maxDate = new DateTime(new DateTime(2101, 1, 28, 23, 59, 59, 999).Ticks + 9999L);

		// Token: 0x040006D0 RID: 1744
		private static readonly int[,] s_yinfo = new int[,]
		{
			{
				0,
				2,
				19,
				19168
			},
			{
				0,
				2,
				8,
				42352
			},
			{
				5,
				1,
				29,
				21096
			},
			{
				0,
				2,
				16,
				53856
			},
			{
				0,
				2,
				4,
				55632
			},
			{
				4,
				1,
				25,
				27304
			},
			{
				0,
				2,
				13,
				22176
			},
			{
				0,
				2,
				2,
				39632
			},
			{
				2,
				1,
				22,
				19176
			},
			{
				0,
				2,
				10,
				19168
			},
			{
				6,
				1,
				30,
				42200
			},
			{
				0,
				2,
				18,
				42192
			},
			{
				0,
				2,
				6,
				53840
			},
			{
				5,
				1,
				26,
				54568
			},
			{
				0,
				2,
				14,
				46400
			},
			{
				0,
				2,
				3,
				54944
			},
			{
				2,
				1,
				23,
				38608
			},
			{
				0,
				2,
				11,
				38320
			},
			{
				7,
				2,
				1,
				18872
			},
			{
				0,
				2,
				20,
				18800
			},
			{
				0,
				2,
				8,
				42160
			},
			{
				5,
				1,
				28,
				45656
			},
			{
				0,
				2,
				16,
				27216
			},
			{
				0,
				2,
				5,
				27968
			},
			{
				4,
				1,
				24,
				44456
			},
			{
				0,
				2,
				13,
				11104
			},
			{
				0,
				2,
				2,
				38256
			},
			{
				2,
				1,
				23,
				18808
			},
			{
				0,
				2,
				10,
				18800
			},
			{
				6,
				1,
				30,
				25776
			},
			{
				0,
				2,
				17,
				54432
			},
			{
				0,
				2,
				6,
				59984
			},
			{
				5,
				1,
				26,
				27976
			},
			{
				0,
				2,
				14,
				23248
			},
			{
				0,
				2,
				4,
				11104
			},
			{
				3,
				1,
				24,
				37744
			},
			{
				0,
				2,
				11,
				37600
			},
			{
				7,
				1,
				31,
				51560
			},
			{
				0,
				2,
				19,
				51536
			},
			{
				0,
				2,
				8,
				54432
			},
			{
				6,
				1,
				27,
				55888
			},
			{
				0,
				2,
				15,
				46416
			},
			{
				0,
				2,
				5,
				22176
			},
			{
				4,
				1,
				25,
				43736
			},
			{
				0,
				2,
				13,
				9680
			},
			{
				0,
				2,
				2,
				37584
			},
			{
				2,
				1,
				22,
				51544
			},
			{
				0,
				2,
				10,
				43344
			},
			{
				7,
				1,
				29,
				46248
			},
			{
				0,
				2,
				17,
				27808
			},
			{
				0,
				2,
				6,
				46416
			},
			{
				5,
				1,
				27,
				21928
			},
			{
				0,
				2,
				14,
				19872
			},
			{
				0,
				2,
				3,
				42416
			},
			{
				3,
				1,
				24,
				21176
			},
			{
				0,
				2,
				12,
				21168
			},
			{
				8,
				1,
				31,
				43344
			},
			{
				0,
				2,
				18,
				59728
			},
			{
				0,
				2,
				8,
				27296
			},
			{
				6,
				1,
				28,
				44368
			},
			{
				0,
				2,
				15,
				43856
			},
			{
				0,
				2,
				5,
				19296
			},
			{
				4,
				1,
				25,
				42352
			},
			{
				0,
				2,
				13,
				42352
			},
			{
				0,
				2,
				2,
				21088
			},
			{
				3,
				1,
				21,
				59696
			},
			{
				0,
				2,
				9,
				55632
			},
			{
				7,
				1,
				30,
				23208
			},
			{
				0,
				2,
				17,
				22176
			},
			{
				0,
				2,
				6,
				38608
			},
			{
				5,
				1,
				27,
				19176
			},
			{
				0,
				2,
				15,
				19152
			},
			{
				0,
				2,
				3,
				42192
			},
			{
				4,
				1,
				23,
				53864
			},
			{
				0,
				2,
				11,
				53840
			},
			{
				8,
				1,
				31,
				54568
			},
			{
				0,
				2,
				18,
				46400
			},
			{
				0,
				2,
				7,
				46752
			},
			{
				6,
				1,
				28,
				38608
			},
			{
				0,
				2,
				16,
				38320
			},
			{
				0,
				2,
				5,
				18864
			},
			{
				4,
				1,
				25,
				42168
			},
			{
				0,
				2,
				13,
				42160
			},
			{
				10,
				2,
				2,
				45656
			},
			{
				0,
				2,
				20,
				27216
			},
			{
				0,
				2,
				9,
				27968
			},
			{
				6,
				1,
				29,
				44448
			},
			{
				0,
				2,
				17,
				43872
			},
			{
				0,
				2,
				6,
				38256
			},
			{
				5,
				1,
				27,
				18808
			},
			{
				0,
				2,
				15,
				18800
			},
			{
				0,
				2,
				4,
				25776
			},
			{
				3,
				1,
				23,
				27216
			},
			{
				0,
				2,
				10,
				59984
			},
			{
				8,
				1,
				31,
				27432
			},
			{
				0,
				2,
				19,
				23232
			},
			{
				0,
				2,
				7,
				43872
			},
			{
				5,
				1,
				28,
				37736
			},
			{
				0,
				2,
				16,
				37600
			},
			{
				0,
				2,
				5,
				51552
			},
			{
				4,
				1,
				24,
				54440
			},
			{
				0,
				2,
				12,
				54432
			},
			{
				0,
				2,
				1,
				55888
			},
			{
				2,
				1,
				22,
				23208
			},
			{
				0,
				2,
				9,
				22176
			},
			{
				7,
				1,
				29,
				43736
			},
			{
				0,
				2,
				18,
				9680
			},
			{
				0,
				2,
				7,
				37584
			},
			{
				5,
				1,
				26,
				51544
			},
			{
				0,
				2,
				14,
				43344
			},
			{
				0,
				2,
				3,
				46240
			},
			{
				4,
				1,
				23,
				46416
			},
			{
				0,
				2,
				10,
				44368
			},
			{
				9,
				1,
				31,
				21928
			},
			{
				0,
				2,
				19,
				19360
			},
			{
				0,
				2,
				8,
				42416
			},
			{
				6,
				1,
				28,
				21176
			},
			{
				0,
				2,
				16,
				21168
			},
			{
				0,
				2,
				5,
				43312
			},
			{
				4,
				1,
				25,
				29864
			},
			{
				0,
				2,
				12,
				27296
			},
			{
				0,
				2,
				1,
				44368
			},
			{
				2,
				1,
				22,
				19880
			},
			{
				0,
				2,
				10,
				19296
			},
			{
				6,
				1,
				29,
				42352
			},
			{
				0,
				2,
				17,
				42208
			},
			{
				0,
				2,
				6,
				53856
			},
			{
				5,
				1,
				26,
				59696
			},
			{
				0,
				2,
				13,
				54576
			},
			{
				0,
				2,
				3,
				23200
			},
			{
				3,
				1,
				23,
				27472
			},
			{
				0,
				2,
				11,
				38608
			},
			{
				11,
				1,
				31,
				19176
			},
			{
				0,
				2,
				19,
				19152
			},
			{
				0,
				2,
				8,
				42192
			},
			{
				6,
				1,
				28,
				53848
			},
			{
				0,
				2,
				15,
				53840
			},
			{
				0,
				2,
				4,
				54560
			},
			{
				5,
				1,
				24,
				55968
			},
			{
				0,
				2,
				12,
				46496
			},
			{
				0,
				2,
				1,
				22224
			},
			{
				2,
				1,
				22,
				19160
			},
			{
				0,
				2,
				10,
				18864
			},
			{
				7,
				1,
				30,
				42168
			},
			{
				0,
				2,
				17,
				42160
			},
			{
				0,
				2,
				6,
				43600
			},
			{
				5,
				1,
				26,
				46376
			},
			{
				0,
				2,
				14,
				27936
			},
			{
				0,
				2,
				2,
				44448
			},
			{
				3,
				1,
				23,
				21936
			},
			{
				0,
				2,
				11,
				37744
			},
			{
				8,
				2,
				1,
				18808
			},
			{
				0,
				2,
				19,
				18800
			},
			{
				0,
				2,
				8,
				25776
			},
			{
				6,
				1,
				28,
				27216
			},
			{
				0,
				2,
				15,
				59984
			},
			{
				0,
				2,
				4,
				27296
			},
			{
				4,
				1,
				24,
				43872
			},
			{
				0,
				2,
				12,
				43744
			},
			{
				0,
				2,
				2,
				37600
			},
			{
				3,
				1,
				21,
				51568
			},
			{
				0,
				2,
				9,
				51552
			},
			{
				7,
				1,
				29,
				54440
			},
			{
				0,
				2,
				17,
				54432
			},
			{
				0,
				2,
				5,
				55888
			},
			{
				5,
				1,
				26,
				23208
			},
			{
				0,
				2,
				14,
				22176
			},
			{
				0,
				2,
				3,
				42704
			},
			{
				4,
				1,
				23,
				21224
			},
			{
				0,
				2,
				11,
				21200
			},
			{
				8,
				1,
				31,
				43352
			},
			{
				0,
				2,
				19,
				43344
			},
			{
				0,
				2,
				7,
				46240
			},
			{
				6,
				1,
				27,
				46416
			},
			{
				0,
				2,
				15,
				44368
			},
			{
				0,
				2,
				5,
				21920
			},
			{
				4,
				1,
				24,
				42448
			},
			{
				0,
				2,
				12,
				42416
			},
			{
				0,
				2,
				2,
				21168
			},
			{
				3,
				1,
				22,
				43320
			},
			{
				0,
				2,
				9,
				26928
			},
			{
				7,
				1,
				29,
				29336
			},
			{
				0,
				2,
				17,
				27296
			},
			{
				0,
				2,
				6,
				44368
			},
			{
				5,
				1,
				26,
				19880
			},
			{
				0,
				2,
				14,
				19296
			},
			{
				0,
				2,
				3,
				42352
			},
			{
				4,
				1,
				24,
				21104
			},
			{
				0,
				2,
				10,
				53600
			},
			{
				8,
				1,
				30,
				59696
			},
			{
				0,
				2,
				18,
				54560
			},
			{
				0,
				2,
				7,
				55968
			},
			{
				6,
				1,
				27,
				27472
			},
			{
				0,
				2,
				15,
				22224
			},
			{
				0,
				2,
				5,
				19168
			},
			{
				4,
				1,
				25,
				42216
			},
			{
				0,
				2,
				12,
				41680
			},
			{
				0,
				2,
				1,
				53584
			},
			{
				2,
				1,
				21,
				55592
			},
			{
				0,
				2,
				9,
				54560
			}
		};
	}
}
